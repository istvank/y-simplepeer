{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","node_modules/debug/browser.js","y-simplepeer.js","node_modules/debug/debug.js","node_modules/get-browser-rtc/index.js","node_modules/hat/index.js","node_modules/inherits/inherits_browser.js","node_modules/is-typedarray/index.js","node_modules/ms/index.js","node_modules/once/once.js","node_modules/simple-peer/index.js","node_modules/typedarray-to-buffer/index.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","node_modules/wrappy/wrappy.js","src/SimplePeerConnector.js","../yjs/node_modules/base64-js/lib/b64.js","../yjs/node_modules/buffer/index.js","../yjs/node_modules/buffer/node_modules/isarray/index.js","../yjs/node_modules/core-util-is/lib/util.js","../yjs/node_modules/events/events.js","../yjs/node_modules/ieee754/index.js","../yjs/node_modules/is-buffer/index.js","../yjs/node_modules/isarray/index.js","../yjs/node_modules/process-nextick-args/index.js","../yjs/node_modules/process/browser.js","../yjs/node_modules/readable-stream/duplex.js","../yjs/node_modules/readable-stream/lib/_stream_duplex.js","../yjs/node_modules/readable-stream/lib/_stream_passthrough.js","../yjs/node_modules/readable-stream/lib/_stream_readable.js","../yjs/node_modules/readable-stream/lib/_stream_transform.js","../yjs/node_modules/readable-stream/lib/_stream_writable.js","../yjs/node_modules/readable-stream/passthrough.js","../yjs/node_modules/readable-stream/readable.js","../yjs/node_modules/readable-stream/transform.js","../yjs/node_modules/readable-stream/writable.js","../yjs/node_modules/stream-browserify/index.js","../yjs/node_modules/string_decoder/index.js","../yjs/node_modules/util-deprecate/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","useColors","document","documentElement","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","args","arguments","this","namespace","humanize","diff","c","color","concat","Array","prototype","slice","index","lastC","replace","splice","log","Function","apply","save","namespaces","storage","removeItem","debug","load","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","./debug",2,"selectColor","prevColor","disabled","enabled","self","curr","Date","ms","prevTime","prev","coerce","format","formatter","val","logFn","bind","fn","split","len","skips","push","substr","names","disable","name","test","stack","message",3,"wrtc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","webkitRTCIceCandidate",4,"hat","bits","base","undefined","digits","Math","pow","Infinity","rem","floor","res","x","random","toString","b","parsed","rack","expandBy","data","iters","id","Object","hasOwnProperty","hats","get","set","value",5,"create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor",6,"isTypedArray","arr","isStrictTypedArray","isLooseTypedArray","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","strict","loose","[object Int8Array]","[object Int16Array]","[object Int32Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Uint16Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]",7,"parse","str","exec","parseFloat","type","y","d","h","m","short","round","long","plural","ceil","options",8,"once","called","wrappy","proto","defineProperty",9,"Buffer","Peer","opts","_debug","allowHalfOpen","highWaterMark","stream","Duplex","initiator","channelConfig","channelName","config","constraints","reconnectTimer","sdpTransform","sdp","trickle","destroyed","connected","remoteAddress","remoteFamily","remotePort","localAddress","localPort","_wrtc","getBrowserRTC","_maxBufferedAmount","_pcReady","_channelReady","_iceComplete","_channel","_pendingCandidates","_chunk","_cb","_interval","_reconnectTimeout","_pc","oniceconnectionstatechange","_onIceConnectionStateChange","onsignalingstatechange","_onSignalingStateChange","onicecandidate","_onIceCandidate","addStream","onaddstream","_onAddStream","_setupData","channel","createDataChannel","onnegotiationneeded","_createOffer","ondatachannel","on","setTimeout","_destroy","noop","inherits","toBuffer","WEBRTC_SUPPORT","iceServers","url","urls","bufferedAmount","address","port","family","signal","addIceCandidate","candidate","_onError","err","setRemoteDescription","remoteDescription","_createAnswer","forEach","send","chunk","ArrayBuffer","isBuffer","Blob","byteLength","size","destroy","onclose","readable","_readableState","ended","_writableState","finished","end","clearInterval","clearTimeout","close","onmessage","onopen","emit","event","label","binaryType","_onChannelMessage","_onChannelOpen","_onChannelClose","_read","_write","encoding","cb","createOffer","offer","setLocalDescription","sendOffer","localDescription","offerConstraints","createAnswer","answer","sendAnswer","answerConstraints","iceGatheringState","iceConnectionState","_maybeReady","onStats","items","item","ipAddress","Number","portNumber","candidateType","_connecting","setInterval","unref","getStats","result","stat","timestamp","signalingState","sdpMLineIndex","sdpMid","substring","../../../yjs/node_modules/is-buffer/index.js","get-browser-rtc","is-typedarray","typedarray-to-buffer",10,"TYPED_ARRAY_SUPPORT","_augment","buffer","byteOffset",11,"global","rng","crypto","getRandomValues","_rnds8","_rnds",12,"buf","offset","ii","oct","_hexToByte","unparse","bth","_byteToHex","v1","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","v4","rnds","_rng","_seedBytes","uuid","./rng",13,"wrapper","ret","keys","k","TypeError",14,"_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","extend","Y","SimplePeerConnector","_Y$AbstractConnector","simplepeer","_this","getPrototypeOf","setUserId","action","receiveMessage","peerID","payload","userJoined","_createClass","key","_get","uid","success","userId","AbstractConnector","defineProperties","target","props","descriptor","protoProps","staticProps","object","property","receiver","desc","getOwnPropertyDescriptor","parent","getter","simple-peer",15,"lookup","decode","elt","charCodeAt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","tmp","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","toByteArray","fromByteArray","base64js",16,17,"typedArraySupport","Bar","foo","subarray","kMaxLength","arg","fromNumber","fromString","fromObject","that","allocate","checked","string","write","fromBuffer","isArray","fromArray","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array","_isBuffer","fromPool","poolSize","rootParent","RangeError","SlowBuffer","subject","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","remaining","strLen","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","String","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","trim","units","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","compare","isEncoding","list","pos","equals","inspect","join","indexOf","arrayIndexOf","foundIndex","readUInt8","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","base64-js","isarray",18,19,"objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","../../is-buffer/index.js",20,"EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","listeners","error","addListener","listener","newListener","warned","trace","g","removeListener","fired","position","removeAllListeners","listenerCount","evlistener","emitter",21,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2",22,"dup",23,"obj",24,25,"process","nextTick","version","_process",26,"cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","fun","title","browser","env","argv","versions","off","binding","cwd","chdir","dir","umask",27,"./lib/_stream_duplex.js",28,"Readable","Writable","onend","processNextTick","onEndNT","objectKeys","util","method","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args",29,"PassThrough","Transform","_transform","./_stream_transform",30,"ReadableState","objectMode","readableObjectMode","hwm","defaultHwm","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","Stream","readableAddChunk","state","addToFront","chunkInvalid","onEofChunk","unshift","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resumeScheduled","resume_","fromList","stringMode","shift","cpy","endReadable","endReadableNT","xs","_","debugUtil","debuglog","isPaused","setEncoding","enc","nOrig","doRead","pipe","dest","pipeOpts","onunpipe","cleanup","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","pause","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","events","_fromList","./_stream_duplex","string_decoder/",31,"TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","transform","flush","_flush","done","ws","writeencoding",32,"nop","WriteReq","callback","next","WritableState","writableObjectMode","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","last","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","cbs","prefinish","need","endWritable","internalUtil","deprecate","getBuffer","current","cork","uncork","setDefaultEncoding","util-deprecate",33,"./lib/_stream_passthrough.js",34,"./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js",35,36,37,"EE","source","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js",38,"assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr",39,"msg","deprecated","warn"],"mappings":"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","file":"y-simplepeer.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n},{\"./debug\":2}],2:[function(require,module,exports){\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n},{\"ms\":7}],3:[function(require,module,exports){\n// originally pulled out of simple-peer\n\nmodule.exports = function getBrowserRTC () {\n  if (typeof window === 'undefined') return null\n  var wrtc = {\n    RTCPeerConnection: window.mozRTCPeerConnection || window.RTCPeerConnection ||\n      window.webkitRTCPeerConnection,\n    RTCSessionDescription: window.mozRTCSessionDescription ||\n      window.RTCSessionDescription || window.webkitRTCSessionDescription,\n    RTCIceCandidate: window.mozRTCIceCandidate || window.RTCIceCandidate ||\n      window.webkitRTCIceCandidate\n  }\n  if (!wrtc.RTCPeerConnection) return null\n  return wrtc\n}\n\n},{}],4:[function(require,module,exports){\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n\n},{}],5:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],6:[function(require,module,exports){\nmodule.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n\n},{}],7:[function(require,module,exports){\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n},{}],8:[function(require,module,exports){\nvar wrappy = require('wrappy')\nmodule.exports = wrappy(once)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\n},{\"wrappy\":13}],9:[function(require,module,exports){\n(function (Buffer){\n/* global Blob */\n\nmodule.exports = Peer\n\nvar debug = require('debug')('simple-peer')\nvar getBrowserRTC = require('get-browser-rtc')\nvar hat = require('hat')\nvar inherits = require('inherits')\nvar isTypedArray = require('is-typedarray')\nvar once = require('once')\nvar stream = require('stream')\nvar toBuffer = require('typedarray-to-buffer')\n\ninherits(Peer, stream.Duplex)\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nfunction Peer (opts) {\n  var self = this\n  if (!(self instanceof Peer)) return new Peer(opts)\n  self._debug('new peer %o', opts)\n\n  if (!opts) opts = {}\n  opts.allowHalfOpen = false\n  if (opts.highWaterMark == null) opts.highWaterMark = 1024 * 1024\n\n  stream.Duplex.call(self, opts)\n\n  self.initiator = opts.initiator || false\n  self.channelConfig = opts.channelConfig || Peer.channelConfig\n  self.channelName = opts.channelName || hat(160)\n  if (!opts.initiator) self.channelName = null\n  self.config = opts.config || Peer.config\n  self.constraints = opts.constraints || Peer.constraints\n  self.reconnectTimer = opts.reconnectTimer || 0\n  self.sdpTransform = opts.sdpTransform || function (sdp) { return sdp }\n  self.stream = opts.stream || false\n  self.trickle = opts.trickle !== undefined ? opts.trickle : true\n\n  self.destroyed = false\n  self.connected = false\n\n  // so Peer object always has same shape (V8 optimization)\n  self.remoteAddress = undefined\n  self.remoteFamily = undefined\n  self.remotePort = undefined\n  self.localAddress = undefined\n  self.localPort = undefined\n\n  self._wrtc = opts.wrtc || getBrowserRTC()\n  if (!self._wrtc) {\n    if (typeof window === 'undefined') {\n      throw new Error('No WebRTC support: Specify `opts.wrtc` option in this environment')\n    } else {\n      throw new Error('No WebRTC support: Not a supported browser')\n    }\n  }\n\n  self._maxBufferedAmount = opts.highWaterMark\n  self._pcReady = false\n  self._channelReady = false\n  self._iceComplete = false // ice candidate trickle done (got null candidate)\n  self._channel = null\n  self._pendingCandidates = []\n\n  self._chunk = null\n  self._cb = null\n  self._interval = null\n  self._reconnectTimeout = null\n\n  self._pc = new (self._wrtc.RTCPeerConnection)(self.config, self.constraints)\n  self._pc.oniceconnectionstatechange = self._onIceConnectionStateChange.bind(self)\n  self._pc.onsignalingstatechange = self._onSignalingStateChange.bind(self)\n  self._pc.onicecandidate = self._onIceCandidate.bind(self)\n\n  if (self.stream) self._pc.addStream(self.stream)\n  self._pc.onaddstream = self._onAddStream.bind(self)\n\n  if (self.initiator) {\n    self._setupData({ channel: self._pc.createDataChannel(self.channelName, self.channelConfig) })\n    self._pc.onnegotiationneeded = once(self._createOffer.bind(self))\n    // Only Chrome triggers \"negotiationneeded\"; this is a workaround for other\n    // implementations\n    if (typeof window === 'undefined' || !window.webkitRTCPeerConnection) {\n      self._pc.onnegotiationneeded()\n    }\n  } else {\n    self._pc.ondatachannel = self._setupData.bind(self)\n  }\n\n  self.on('finish', function () {\n    if (self.connected) {\n      // When local peer is finished writing, close connection to remote peer.\n      // Half open connections are currently not supported.\n      // Wait a bit before destroying so the datachannel flushes.\n      // TODO: is there a more reliable way to accomplish this?\n      setTimeout(function () {\n        self._destroy()\n      }, 100)\n    } else {\n      // If data channel is not connected when local peer is finished writing, wait until\n      // data is flushed to network at \"connect\" event.\n      // TODO: is there a more reliable way to accomplish this?\n      self.once('connect', function () {\n        setTimeout(function () {\n          self._destroy()\n        }, 100)\n      })\n    }\n  })\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose config, constraints, and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config, opts.constraints, or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      url: 'stun:23.21.150.121', // deprecated, replaced by `urls`\n      urls: 'stun:23.21.150.121'\n    }\n  ]\n}\nPeer.constraints = {}\nPeer.channelConfig = {}\n\nObject.defineProperty(Peer.prototype, 'bufferSize', {\n  get: function () {\n    var self = this\n    return (self._channel && self._channel.bufferedAmount) || 0\n  }\n})\n\nPeer.prototype.address = function () {\n  var self = this\n  return { port: self.localPort, family: 'IPv4', address: self.localAddress }\n}\n\nPeer.prototype.signal = function (data) {\n  var self = this\n  if (self.destroyed) throw new Error('cannot signal after peer is destroyed')\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (err) {\n      data = {}\n    }\n  }\n  self._debug('signal()')\n\n  function addIceCandidate (candidate) {\n    try {\n      self._pc.addIceCandidate(\n        new self._wrtc.RTCIceCandidate(candidate), noop, self._onError.bind(self)\n      )\n    } catch (err) {\n      self._destroy(new Error('error adding candidate: ' + err.message))\n    }\n  }\n\n  if (data.sdp) {\n    self._pc.setRemoteDescription(new (self._wrtc.RTCSessionDescription)(data), function () {\n      if (self.destroyed) return\n      if (self._pc.remoteDescription.type === 'offer') self._createAnswer()\n\n      self._pendingCandidates.forEach(addIceCandidate)\n      self._pendingCandidates = []\n    }, self._onError.bind(self))\n  }\n  if (data.candidate) {\n    if (self._pc.remoteDescription) addIceCandidate(data.candidate)\n    else self._pendingCandidates.push(data.candidate)\n  }\n  if (!data.sdp && !data.candidate) {\n    self._destroy(new Error('signal() called with invalid signal data'))\n  }\n}\n\n/**\n * Send text/binary data to the remote peer.\n * @param {TypedArrayView|ArrayBuffer|Buffer|string|Blob|Object} chunk\n */\nPeer.prototype.send = function (chunk) {\n  var self = this\n\n  if (!isTypedArray.strict(chunk) && !(chunk instanceof ArrayBuffer) &&\n    !Buffer.isBuffer(chunk) && typeof chunk !== 'string' &&\n    (typeof Blob === 'undefined' || !(chunk instanceof Blob))) {\n    chunk = JSON.stringify(chunk)\n  }\n\n  // `wrtc` module doesn't accept node.js buffer\n  if (Buffer.isBuffer(chunk) && !isTypedArray.strict(chunk)) {\n    chunk = new Uint8Array(chunk)\n  }\n\n  var len = chunk.length || chunk.byteLength || chunk.size\n  self._channel.send(chunk)\n  self._debug('write: %d bytes', len)\n}\n\nPeer.prototype.destroy = function (onclose) {\n  var self = this\n  self._destroy(null, onclose)\n}\n\nPeer.prototype._destroy = function (err, onclose) {\n  var self = this\n  if (self.destroyed) return\n  if (onclose) self.once('close', onclose)\n\n  self._debug('destroy (error: %s)', err && err.message)\n\n  self.readable = self.writable = false\n\n  if (!self._readableState.ended) self.push(null)\n  if (!self._writableState.finished) self.end()\n\n  self.destroyed = true\n  self.connected = false\n  self._pcReady = false\n  self._channelReady = false\n\n  self._chunk = null\n  self._cb = null\n  clearInterval(self._interval)\n  clearTimeout(self._reconnectTimeout)\n\n  if (self._pc) {\n    try {\n      self._pc.close()\n    } catch (err) {}\n\n    self._pc.oniceconnectionstatechange = null\n    self._pc.onsignalingstatechange = null\n    self._pc.onicecandidate = null\n  }\n\n  if (self._channel) {\n    try {\n      self._channel.close()\n    } catch (err) {}\n\n    self._channel.onmessage = null\n    self._channel.onopen = null\n    self._channel.onclose = null\n  }\n  self._pc = null\n  self._channel = null\n\n  if (err) self.emit('error', err)\n  self.emit('close')\n}\n\nPeer.prototype._setupData = function (event) {\n  var self = this\n  self._channel = event.channel\n  self.channelName = self._channel.label\n\n  self._channel.binaryType = 'arraybuffer'\n  self._channel.onmessage = self._onChannelMessage.bind(self)\n  self._channel.onopen = self._onChannelOpen.bind(self)\n  self._channel.onclose = self._onChannelClose.bind(self)\n}\n\nPeer.prototype._read = function () {}\n\nPeer.prototype._write = function (chunk, encoding, cb) {\n  var self = this\n  if (self.destroyed) return cb(new Error('cannot write after peer is destroyed'))\n\n  if (self.connected) {\n    try {\n      self.send(chunk)\n    } catch (err) {\n      return self._onError(err)\n    }\n    if (self._channel.bufferedAmount > self._maxBufferedAmount) {\n      self._debug('start backpressure: bufferedAmount %d', self._channel.bufferedAmount)\n      self._cb = cb\n    } else {\n      cb(null)\n    }\n  } else {\n    self._debug('write before connect')\n    self._chunk = chunk\n    self._cb = cb\n  }\n}\n\nPeer.prototype._createOffer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._pc.createOffer(function (offer) {\n    if (self.destroyed) return\n    offer.sdp = self.sdpTransform(offer.sdp)\n    self._pc.setLocalDescription(offer, noop, self._onError.bind(self))\n    var sendOffer = function () {\n      var signal = self._pc.localDescription || offer\n      self._debug('signal')\n      self.emit('signal', {\n        type: signal.type,\n        sdp: signal.sdp\n      })\n    }\n    if (self.trickle || self._iceComplete) sendOffer()\n    else self.once('_iceComplete', sendOffer) // wait for candidates\n  }, self._onError.bind(self), self.offerConstraints)\n}\n\nPeer.prototype._createAnswer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._pc.createAnswer(function (answer) {\n    if (self.destroyed) return\n    answer.sdp = self.sdpTransform(answer.sdp)\n    self._pc.setLocalDescription(answer, noop, self._onError.bind(self))\n    var sendAnswer = function () {\n      var signal = self._pc.localDescription || answer\n      self._debug('signal')\n      self.emit('signal', {\n        type: signal.type,\n        sdp: signal.sdp\n      })\n    }\n    if (self.trickle || self._iceComplete) sendAnswer()\n    else self.once('_iceComplete', sendAnswer)\n  }, self._onError.bind(self), self.answerConstraints)\n}\n\nPeer.prototype._onIceConnectionStateChange = function () {\n  var self = this\n  if (self.destroyed) return\n  var iceGatheringState = self._pc.iceGatheringState\n  var iceConnectionState = self._pc.iceConnectionState\n  self._debug('iceConnectionStateChange %s %s', iceGatheringState, iceConnectionState)\n  self.emit('iceConnectionStateChange', iceGatheringState, iceConnectionState)\n  if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n    clearTimeout(self._reconnectTimeout)\n    self._pcReady = true\n    self._maybeReady()\n  }\n  if (iceConnectionState === 'disconnected') {\n    if (self.reconnectTimer) {\n      // If user has set `opt.reconnectTimer`, allow time for ICE to attempt a reconnect\n      clearTimeout(self._reconnectTimeout)\n      self._reconnectTimeout = setTimeout(function () {\n        self._destroy()\n      }, self.reconnectTimer)\n    } else {\n      self._destroy()\n    }\n  }\n  if (iceConnectionState === 'closed') {\n    self._destroy()\n  }\n}\n\nPeer.prototype._maybeReady = function () {\n  var self = this\n  self._debug('maybeReady pc %s channel %s', self._pcReady, self._channelReady)\n  if (self.connected || self._connecting || !self._pcReady || !self._channelReady) return\n  self._connecting = true\n\n  if (!self._pc.getStats) {\n    onStats([])\n  } else if (typeof window !== 'undefined' && !!window.mozRTCPeerConnection) {\n    self._pc.getStats(null, function (res) {\n      var items = []\n      res.forEach(function (item) {\n        items.push(item)\n      })\n      onStats(items)\n    }, self._onError.bind(self))\n  } else {\n    self._pc.getStats(function (res) {\n      var items = []\n      res.result().forEach(function (result) {\n        var item = {}\n        result.names().forEach(function (name) {\n          item[name] = result.stat(name)\n        })\n        item.id = result.id\n        item.type = result.type\n        item.timestamp = result.timestamp\n        items.push(item)\n      })\n      onStats(items)\n    })\n  }\n\n  function onStats (items) {\n    items.forEach(function (item) {\n      if (item.type === 'remotecandidate') {\n        self.remoteAddress = item.ipAddress\n        self.remotePort = Number(item.portNumber)\n        self.remoteFamily = 'IPv4'\n        self._debug(\n          'connect remote: %s:%s (%s)',\n          self.remoteAddress, self.remotePort, self.remoteFamily\n        )\n      } else if (item.type === 'localcandidate' && item.candidateType === 'host') {\n        self.localAddress = item.ipAddress\n        self.localPort = Number(item.portNumber)\n        self._debug('connect local: %s:%s', self.localAddress, self.localPort)\n      }\n    })\n\n    self._connecting = false\n    self.connected = true\n\n    if (self._chunk) {\n      try {\n        self.send(self._chunk)\n      } catch (err) {\n        return self._onError(err)\n      }\n      self._chunk = null\n      self._debug('sent chunk from \"write before connect\"')\n\n      var cb = self._cb\n      self._cb = null\n      cb(null)\n    }\n\n    self._interval = setInterval(function () {\n      if (!self._cb || !self._channel || self._channel.bufferedAmount > self._maxBufferedAmount) return\n      self._debug('ending backpressure: bufferedAmount %d', self._channel.bufferedAmount)\n      var cb = self._cb\n      self._cb = null\n      cb(null)\n    }, 150)\n    if (self._interval.unref) self._interval.unref()\n\n    self._debug('connect')\n    self.emit('connect')\n  }\n}\n\nPeer.prototype._onSignalingStateChange = function () {\n  var self = this\n  if (self.destroyed) return\n  self._debug('signalingStateChange %s', self._pc.signalingState)\n  self.emit('signalingStateChange', self._pc.signalingState)\n}\n\nPeer.prototype._onIceCandidate = function (event) {\n  var self = this\n  if (self.destroyed) return\n  if (event.candidate && self.trickle) {\n    self.emit('signal', {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMLineIndex: event.candidate.sdpMLineIndex,\n        sdpMid: event.candidate.sdpMid\n      }\n    })\n  } else if (!event.candidate) {\n    self._iceComplete = true\n    self.emit('_iceComplete')\n  }\n}\n\nPeer.prototype._onChannelMessage = function (event) {\n  var self = this\n  if (self.destroyed) return\n  var data = event.data\n  self._debug('read: %d bytes', data.byteLength || data.length)\n\n  if (data instanceof ArrayBuffer) {\n    data = toBuffer(new Uint8Array(data))\n    self.push(data)\n  } else {\n    try {\n      data = JSON.parse(data)\n    } catch (err) {}\n    self.emit('data', data)\n  }\n}\n\nPeer.prototype._onChannelOpen = function () {\n  var self = this\n  if (self.connected || self.destroyed) return\n  self._debug('on channel open')\n  self._channelReady = true\n  self._maybeReady()\n}\n\nPeer.prototype._onChannelClose = function () {\n  var self = this\n  if (self.destroyed) return\n  self._debug('on channel close')\n  self._destroy()\n}\n\nPeer.prototype._onAddStream = function (event) {\n  var self = this\n  if (self.destroyed) return\n  self._debug('on add stream')\n  self.emit('stream', event.stream)\n}\n\nPeer.prototype._onError = function (err) {\n  var self = this\n  if (self.destroyed) return\n  self._debug('error %s', err.message || err)\n  self._destroy(err)\n}\n\nPeer.prototype._debug = function () {\n  var self = this\n  var args = [].slice.call(arguments)\n  var id = self.channelName && self.channelName.substring(0, 7)\n  args[0] = '[' + id + '] ' + args[0]\n  debug.apply(null, args)\n}\n\nfunction noop () {}\n\n}).call(this,{\"isBuffer\":require(\"../../../yjs/node_modules/is-buffer/index.js\")})\n\n},{\"../../../yjs/node_modules/is-buffer/index.js\":23,\"debug\":1,\"get-browser-rtc\":3,\"hat\":4,\"inherits\":5,\"is-typedarray\":6,\"once\":8,\"stream\":37,\"typedarray-to-buffer\":10}],10:[function(require,module,exports){\n(function (Buffer){\n/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function (arr) {\n  // If `Buffer` is the browser `buffer` module, and the browser supports typed arrays,\n  // then avoid a copy. Otherwise, create a `Buffer` with a copy.\n  var constructor = Buffer.TYPED_ARRAY_SUPPORT\n    ? Buffer._augment\n    : function (arr) { return new Buffer(arr) }\n\n  if (arr instanceof Uint8Array) {\n    return constructor(arr)\n  } else if (arr instanceof ArrayBuffer) {\n    return constructor(new Uint8Array(arr))\n  } else if (isTypedArray(arr)) {\n    // Use the typed array's underlying ArrayBuffer to back new Buffer. This respects\n    // the \"view\" on the ArrayBuffer, i.e. byteOffset and byteLength. No copy.\n    return constructor(new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength))\n  } else {\n    // Unsupported type, just pass it through to the `Buffer` constructor.\n    return new Buffer(arr)\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":17,\"is-typedarray\":6}],11:[function(require,module,exports){\n(function (global){\n\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\n//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n},{\"./rng\":11}],13:[function(require,module,exports){\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n},{}],14:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SimplePeer = require('simple-peer');\nvar uuid = require('uuid');\n\nfunction extend(Y) {\n  var SimplePeerConnector = (function (_Y$AbstractConnector) {\n    _inherits(SimplePeerConnector, _Y$AbstractConnector);\n\n    function SimplePeerConnector(y, options) {\n      _classCallCheck(this, SimplePeerConnector);\n\n      if (options === undefined) {\n        throw new Error('Options must be defined.');\n      }\n      if (options.simplepeer == null) {\n        throw new Error('SimplePeer object must be defined.');\n      }\n\n      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SimplePeerConnector).call(this, y, options));\n\n      _this.simplepeer = options.simplepeer;\n      var self = _this;\n\n      self.simplepeer.on('connect', function () {\n        console.log('SIMPLEPEER CONNECTED');\n\n        self.setUserId(uuid.v4());\n      });\n\n      self.simplepeer.on('data', function (data) {\n        if (data.action === 'data') {\n          self.receiveMessage(data.peerID, data.payload);\n        } else if (data.action === 'join') {\n          self.userJoined(data.peerID, 'master');\n        }\n        //TODO: peer left, probably on some kind of simple-peer disconnect event\n      });\n\n      return _this;\n    }\n\n    _createClass(SimplePeerConnector, [{\n      key: 'disconnect',\n      value: function disconnect() {\n        this.simplepeer.destroy();\n        _get(Object.getPrototypeOf(SimplePeerConnector.prototype), 'disconnect', this).call(this);\n      }\n    }, {\n      key: 'reconnect',\n      value: function reconnect() {\n        throw new Error('Reconnect is not implemented.');\n        _get(Object.getPrototypeOf(SimplePeerConnector.prototype), 'reconnect', this).call(this);\n      }\n    }, {\n      key: 'send',\n      value: function send(uid, message) {\n        var self = this;\n        // we have to make sure that the message is sent under all circumstances\n        var send = function send() {\n          // check if the clients still exists\n          //var peer = self.swr.webrtc.getPeers(uid)[0];\n          var success;\n          //if (peer) {\n          // success is true, if the message is successfully sent\n          var data = {};\n          data.action = 'data';\n          data.peerID = self.userId;\n          data.payload = message;\n          success = self.simplepeer.send(JSON.stringify(data));\n          //}\n          if (!success) {\n            // resend the message if it didn't work\n            setTimeout(send, 500);\n          }\n        };\n        // try to send the message\n        send();\n      }\n    }, {\n      key: 'broadcast',\n      value: function broadcast(message) {\n        var data = {};\n        data.action = 'data';\n        data.peerID = self.userId;\n        data.payload = message;\n        self.simplepeer.send(JSON.stringify(data));\n        //throw new Error('Broadcast is not implemented.');\n      }\n    }, {\n      key: 'isDisconnected',\n      value: function isDisconnected() {\n        return false;\n      }\n    }]);\n\n    return SimplePeerConnector;\n  })(Y.AbstractConnector);\n\n  Y.extend('simplepeer', SimplePeerConnector);\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{\"simple-peer\":9,\"uuid\":12}],15:[function(require,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],16:[function(require,module,exports){\n\n},{}],17:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":15,\"ieee754\":21,\"isarray\":18}],18:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],19:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":23}],20:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],21:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],22:[function(require,module,exports){\narguments[4][5][0].apply(exports,arguments)\n},{\"dup\":5}],23:[function(require,module,exports){\n/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n\n},{}],24:[function(require,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}],25:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn) {\n  var args = new Array(arguments.length - 1);\n  var i = 0;\n  while (i < args.length) {\n    args[i++] = arguments[i];\n  }\n  process.nextTick(function afterTick() {\n    fn.apply(null, args);\n  });\n}\n\n}).call(this,require('_process'))\n\n},{\"_process\":26}],26:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],27:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\":28}],28:[function(require,module,exports){\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n},{\"./_stream_readable\":30,\"./_stream_writable\":32,\"core-util-is\":19,\"inherits\":22,\"process-nextick-args\":25}],29:[function(require,module,exports){\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n},{\"./_stream_transform\":31,\"core-util-is\":19,\"inherits\":22}],30:[function(require,module,exports){\n(function (process){\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events');\n\n/*<replacement>*/\nvar EElistenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function')\n    this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function() {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (ret !== null)\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      processNextTick(emitReadable_, stream);\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    processNextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      if (state.pipesCount === 1 &&\n          state.pipes[0] === dest &&\n          src.listenerCount('data') === 1 &&\n          !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }; }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else if (list.length === 1)\n      ret = list[0];\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n}).call(this,require('_process'))\n\n},{\"./_stream_duplex\":28,\"_process\":26,\"buffer\":17,\"core-util-is\":19,\"events\":20,\"inherits\":22,\"isarray\":24,\"process-nextick-args\":25,\"string_decoder/\":38,\"util\":16}],31:[function(require,module,exports){\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  this.once('prefinish', function() {\n    if (typeof this._flush === 'function')\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n},{\"./_stream_duplex\":28,\"core-util-is\":19,\"inherits\":22}],32:[function(require,module,exports){\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function (){try {\nObject.defineProperty(WritableState.prototype, 'buffer', {\n  get: internalUtil.deprecate(function() {\n    return this.getBuffer();\n  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +\n     'instead.')\n});\n}catch(_){}}());\n\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = nop;\n\n  if (state.ended)\n    writeAfterEnd(this, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.bufferedRequest)\n      clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',\n'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']\n.indexOf((encoding + '').toLowerCase()) > -1))\n    throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync)\n    processNextTick(cb, er);\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      processNextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var buffer = [];\n    var cbs = [];\n    while (entry) {\n      cbs.push(entry.callback);\n      buffer.push(entry);\n      entry = entry.next;\n    }\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    doWrite(stream, state, true, state.length, buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null)\n      state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined)\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.length === 0 &&\n          state.bufferedRequest === null &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      processNextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n},{\"./_stream_duplex\":28,\"buffer\":17,\"core-util-is\":19,\"events\":20,\"inherits\":22,\"process-nextick-args\":25,\"util-deprecate\":39}],33:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_passthrough.js\")\n\n},{\"./lib/_stream_passthrough.js\":29}],34:[function(require,module,exports){\nvar Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":28,\"./lib/_stream_passthrough.js\":29,\"./lib/_stream_readable.js\":30,\"./lib/_stream_transform.js\":31,\"./lib/_stream_writable.js\":32}],35:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_transform.js\")\n\n},{\"./lib/_stream_transform.js\":31}],36:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_writable.js\")\n\n},{\"./lib/_stream_writable.js\":32}],37:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":20,\"inherits\":22,\"readable-stream/duplex.js\":27,\"readable-stream/passthrough.js\":33,\"readable-stream/readable.js\":34,\"readable-stream/transform.js\":35,\"readable-stream/writable.js\":36}],38:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n},{\"buffer\":17}],39:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[14])\n\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// originally pulled out of simple-peer\n\nmodule.exports = function getBrowserRTC () {\n  if (typeof window === 'undefined') return null\n  var wrtc = {\n    RTCPeerConnection: window.mozRTCPeerConnection || window.RTCPeerConnection ||\n      window.webkitRTCPeerConnection,\n    RTCSessionDescription: window.mozRTCSessionDescription ||\n      window.RTCSessionDescription || window.webkitRTCSessionDescription,\n    RTCIceCandidate: window.mozRTCIceCandidate || window.RTCIceCandidate ||\n      window.webkitRTCIceCandidate\n  }\n  if (!wrtc.RTCPeerConnection) return null\n  return wrtc\n}\n","var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n","/* global Blob */\n\nmodule.exports = Peer\n\nvar debug = require('debug')('simple-peer')\nvar getBrowserRTC = require('get-browser-rtc')\nvar hat = require('hat')\nvar inherits = require('inherits')\nvar isTypedArray = require('is-typedarray')\nvar once = require('once')\nvar stream = require('stream')\nvar toBuffer = require('typedarray-to-buffer')\n\ninherits(Peer, stream.Duplex)\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nfunction Peer (opts) {\n  var self = this\n  if (!(self instanceof Peer)) return new Peer(opts)\n  self._debug('new peer %o', opts)\n\n  if (!opts) opts = {}\n  opts.allowHalfOpen = false\n  if (opts.highWaterMark == null) opts.highWaterMark = 1024 * 1024\n\n  stream.Duplex.call(self, opts)\n\n  self.initiator = opts.initiator || false\n  self.channelConfig = opts.channelConfig || Peer.channelConfig\n  self.channelName = opts.channelName || hat(160)\n  if (!opts.initiator) self.channelName = null\n  self.config = opts.config || Peer.config\n  self.constraints = opts.constraints || Peer.constraints\n  self.reconnectTimer = opts.reconnectTimer || 0\n  self.sdpTransform = opts.sdpTransform || function (sdp) { return sdp }\n  self.stream = opts.stream || false\n  self.trickle = opts.trickle !== undefined ? opts.trickle : true\n\n  self.destroyed = false\n  self.connected = false\n\n  // so Peer object always has same shape (V8 optimization)\n  self.remoteAddress = undefined\n  self.remoteFamily = undefined\n  self.remotePort = undefined\n  self.localAddress = undefined\n  self.localPort = undefined\n\n  self._wrtc = opts.wrtc || getBrowserRTC()\n  if (!self._wrtc) {\n    if (typeof window === 'undefined') {\n      throw new Error('No WebRTC support: Specify `opts.wrtc` option in this environment')\n    } else {\n      throw new Error('No WebRTC support: Not a supported browser')\n    }\n  }\n\n  self._maxBufferedAmount = opts.highWaterMark\n  self._pcReady = false\n  self._channelReady = false\n  self._iceComplete = false // ice candidate trickle done (got null candidate)\n  self._channel = null\n  self._pendingCandidates = []\n\n  self._chunk = null\n  self._cb = null\n  self._interval = null\n  self._reconnectTimeout = null\n\n  self._pc = new (self._wrtc.RTCPeerConnection)(self.config, self.constraints)\n  self._pc.oniceconnectionstatechange = self._onIceConnectionStateChange.bind(self)\n  self._pc.onsignalingstatechange = self._onSignalingStateChange.bind(self)\n  self._pc.onicecandidate = self._onIceCandidate.bind(self)\n\n  if (self.stream) self._pc.addStream(self.stream)\n  self._pc.onaddstream = self._onAddStream.bind(self)\n\n  if (self.initiator) {\n    self._setupData({ channel: self._pc.createDataChannel(self.channelName, self.channelConfig) })\n    self._pc.onnegotiationneeded = once(self._createOffer.bind(self))\n    // Only Chrome triggers \"negotiationneeded\"; this is a workaround for other\n    // implementations\n    if (typeof window === 'undefined' || !window.webkitRTCPeerConnection) {\n      self._pc.onnegotiationneeded()\n    }\n  } else {\n    self._pc.ondatachannel = self._setupData.bind(self)\n  }\n\n  self.on('finish', function () {\n    if (self.connected) {\n      // When local peer is finished writing, close connection to remote peer.\n      // Half open connections are currently not supported.\n      // Wait a bit before destroying so the datachannel flushes.\n      // TODO: is there a more reliable way to accomplish this?\n      setTimeout(function () {\n        self._destroy()\n      }, 100)\n    } else {\n      // If data channel is not connected when local peer is finished writing, wait until\n      // data is flushed to network at \"connect\" event.\n      // TODO: is there a more reliable way to accomplish this?\n      self.once('connect', function () {\n        setTimeout(function () {\n          self._destroy()\n        }, 100)\n      })\n    }\n  })\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose config, constraints, and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config, opts.constraints, or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      url: 'stun:23.21.150.121', // deprecated, replaced by `urls`\n      urls: 'stun:23.21.150.121'\n    }\n  ]\n}\nPeer.constraints = {}\nPeer.channelConfig = {}\n\nObject.defineProperty(Peer.prototype, 'bufferSize', {\n  get: function () {\n    var self = this\n    return (self._channel && self._channel.bufferedAmount) || 0\n  }\n})\n\nPeer.prototype.address = function () {\n  var self = this\n  return { port: self.localPort, family: 'IPv4', address: self.localAddress }\n}\n\nPeer.prototype.signal = function (data) {\n  var self = this\n  if (self.destroyed) throw new Error('cannot signal after peer is destroyed')\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (err) {\n      data = {}\n    }\n  }\n  self._debug('signal()')\n\n  function addIceCandidate (candidate) {\n    try {\n      self._pc.addIceCandidate(\n        new self._wrtc.RTCIceCandidate(candidate), noop, self._onError.bind(self)\n      )\n    } catch (err) {\n      self._destroy(new Error('error adding candidate: ' + err.message))\n    }\n  }\n\n  if (data.sdp) {\n    self._pc.setRemoteDescription(new (self._wrtc.RTCSessionDescription)(data), function () {\n      if (self.destroyed) return\n      if (self._pc.remoteDescription.type === 'offer') self._createAnswer()\n\n      self._pendingCandidates.forEach(addIceCandidate)\n      self._pendingCandidates = []\n    }, self._onError.bind(self))\n  }\n  if (data.candidate) {\n    if (self._pc.remoteDescription) addIceCandidate(data.candidate)\n    else self._pendingCandidates.push(data.candidate)\n  }\n  if (!data.sdp && !data.candidate) {\n    self._destroy(new Error('signal() called with invalid signal data'))\n  }\n}\n\n/**\n * Send text/binary data to the remote peer.\n * @param {TypedArrayView|ArrayBuffer|Buffer|string|Blob|Object} chunk\n */\nPeer.prototype.send = function (chunk) {\n  var self = this\n\n  if (!isTypedArray.strict(chunk) && !(chunk instanceof ArrayBuffer) &&\n    !Buffer.isBuffer(chunk) && typeof chunk !== 'string' &&\n    (typeof Blob === 'undefined' || !(chunk instanceof Blob))) {\n    chunk = JSON.stringify(chunk)\n  }\n\n  // `wrtc` module doesn't accept node.js buffer\n  if (Buffer.isBuffer(chunk) && !isTypedArray.strict(chunk)) {\n    chunk = new Uint8Array(chunk)\n  }\n\n  var len = chunk.length || chunk.byteLength || chunk.size\n  self._channel.send(chunk)\n  self._debug('write: %d bytes', len)\n}\n\nPeer.prototype.destroy = function (onclose) {\n  var self = this\n  self._destroy(null, onclose)\n}\n\nPeer.prototype._destroy = function (err, onclose) {\n  var self = this\n  if (self.destroyed) return\n  if (onclose) self.once('close', onclose)\n\n  self._debug('destroy (error: %s)', err && err.message)\n\n  self.readable = self.writable = false\n\n  if (!self._readableState.ended) self.push(null)\n  if (!self._writableState.finished) self.end()\n\n  self.destroyed = true\n  self.connected = false\n  self._pcReady = false\n  self._channelReady = false\n\n  self._chunk = null\n  self._cb = null\n  clearInterval(self._interval)\n  clearTimeout(self._reconnectTimeout)\n\n  if (self._pc) {\n    try {\n      self._pc.close()\n    } catch (err) {}\n\n    self._pc.oniceconnectionstatechange = null\n    self._pc.onsignalingstatechange = null\n    self._pc.onicecandidate = null\n  }\n\n  if (self._channel) {\n    try {\n      self._channel.close()\n    } catch (err) {}\n\n    self._channel.onmessage = null\n    self._channel.onopen = null\n    self._channel.onclose = null\n  }\n  self._pc = null\n  self._channel = null\n\n  if (err) self.emit('error', err)\n  self.emit('close')\n}\n\nPeer.prototype._setupData = function (event) {\n  var self = this\n  self._channel = event.channel\n  self.channelName = self._channel.label\n\n  self._channel.binaryType = 'arraybuffer'\n  self._channel.onmessage = self._onChannelMessage.bind(self)\n  self._channel.onopen = self._onChannelOpen.bind(self)\n  self._channel.onclose = self._onChannelClose.bind(self)\n}\n\nPeer.prototype._read = function () {}\n\nPeer.prototype._write = function (chunk, encoding, cb) {\n  var self = this\n  if (self.destroyed) return cb(new Error('cannot write after peer is destroyed'))\n\n  if (self.connected) {\n    try {\n      self.send(chunk)\n    } catch (err) {\n      return self._onError(err)\n    }\n    if (self._channel.bufferedAmount > self._maxBufferedAmount) {\n      self._debug('start backpressure: bufferedAmount %d', self._channel.bufferedAmount)\n      self._cb = cb\n    } else {\n      cb(null)\n    }\n  } else {\n    self._debug('write before connect')\n    self._chunk = chunk\n    self._cb = cb\n  }\n}\n\nPeer.prototype._createOffer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._pc.createOffer(function (offer) {\n    if (self.destroyed) return\n    offer.sdp = self.sdpTransform(offer.sdp)\n    self._pc.setLocalDescription(offer, noop, self._onError.bind(self))\n    var sendOffer = function () {\n      var signal = self._pc.localDescription || offer\n      self._debug('signal')\n      self.emit('signal', {\n        type: signal.type,\n        sdp: signal.sdp\n      })\n    }\n    if (self.trickle || self._iceComplete) sendOffer()\n    else self.once('_iceComplete', sendOffer) // wait for candidates\n  }, self._onError.bind(self), self.offerConstraints)\n}\n\nPeer.prototype._createAnswer = function () {\n  var self = this\n  if (self.destroyed) return\n\n  self._pc.createAnswer(function (answer) {\n    if (self.destroyed) return\n    answer.sdp = self.sdpTransform(answer.sdp)\n    self._pc.setLocalDescription(answer, noop, self._onError.bind(self))\n    var sendAnswer = function () {\n      var signal = self._pc.localDescription || answer\n      self._debug('signal')\n      self.emit('signal', {\n        type: signal.type,\n        sdp: signal.sdp\n      })\n    }\n    if (self.trickle || self._iceComplete) sendAnswer()\n    else self.once('_iceComplete', sendAnswer)\n  }, self._onError.bind(self), self.answerConstraints)\n}\n\nPeer.prototype._onIceConnectionStateChange = function () {\n  var self = this\n  if (self.destroyed) return\n  var iceGatheringState = self._pc.iceGatheringState\n  var iceConnectionState = self._pc.iceConnectionState\n  self._debug('iceConnectionStateChange %s %s', iceGatheringState, iceConnectionState)\n  self.emit('iceConnectionStateChange', iceGatheringState, iceConnectionState)\n  if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n    clearTimeout(self._reconnectTimeout)\n    self._pcReady = true\n    self._maybeReady()\n  }\n  if (iceConnectionState === 'disconnected') {\n    if (self.reconnectTimer) {\n      // If user has set `opt.reconnectTimer`, allow time for ICE to attempt a reconnect\n      clearTimeout(self._reconnectTimeout)\n      self._reconnectTimeout = setTimeout(function () {\n        self._destroy()\n      }, self.reconnectTimer)\n    } else {\n      self._destroy()\n    }\n  }\n  if (iceConnectionState === 'closed') {\n    self._destroy()\n  }\n}\n\nPeer.prototype._maybeReady = function () {\n  var self = this\n  self._debug('maybeReady pc %s channel %s', self._pcReady, self._channelReady)\n  if (self.connected || self._connecting || !self._pcReady || !self._channelReady) return\n  self._connecting = true\n\n  if (!self._pc.getStats) {\n    onStats([])\n  } else if (typeof window !== 'undefined' && !!window.mozRTCPeerConnection) {\n    self._pc.getStats(null, function (res) {\n      var items = []\n      res.forEach(function (item) {\n        items.push(item)\n      })\n      onStats(items)\n    }, self._onError.bind(self))\n  } else {\n    self._pc.getStats(function (res) {\n      var items = []\n      res.result().forEach(function (result) {\n        var item = {}\n        result.names().forEach(function (name) {\n          item[name] = result.stat(name)\n        })\n        item.id = result.id\n        item.type = result.type\n        item.timestamp = result.timestamp\n        items.push(item)\n      })\n      onStats(items)\n    })\n  }\n\n  function onStats (items) {\n    items.forEach(function (item) {\n      if (item.type === 'remotecandidate') {\n        self.remoteAddress = item.ipAddress\n        self.remotePort = Number(item.portNumber)\n        self.remoteFamily = 'IPv4'\n        self._debug(\n          'connect remote: %s:%s (%s)',\n          self.remoteAddress, self.remotePort, self.remoteFamily\n        )\n      } else if (item.type === 'localcandidate' && item.candidateType === 'host') {\n        self.localAddress = item.ipAddress\n        self.localPort = Number(item.portNumber)\n        self._debug('connect local: %s:%s', self.localAddress, self.localPort)\n      }\n    })\n\n    self._connecting = false\n    self.connected = true\n\n    if (self._chunk) {\n      try {\n        self.send(self._chunk)\n      } catch (err) {\n        return self._onError(err)\n      }\n      self._chunk = null\n      self._debug('sent chunk from \"write before connect\"')\n\n      var cb = self._cb\n      self._cb = null\n      cb(null)\n    }\n\n    self._interval = setInterval(function () {\n      if (!self._cb || !self._channel || self._channel.bufferedAmount > self._maxBufferedAmount) return\n      self._debug('ending backpressure: bufferedAmount %d', self._channel.bufferedAmount)\n      var cb = self._cb\n      self._cb = null\n      cb(null)\n    }, 150)\n    if (self._interval.unref) self._interval.unref()\n\n    self._debug('connect')\n    self.emit('connect')\n  }\n}\n\nPeer.prototype._onSignalingStateChange = function () {\n  var self = this\n  if (self.destroyed) return\n  self._debug('signalingStateChange %s', self._pc.signalingState)\n  self.emit('signalingStateChange', self._pc.signalingState)\n}\n\nPeer.prototype._onIceCandidate = function (event) {\n  var self = this\n  if (self.destroyed) return\n  if (event.candidate && self.trickle) {\n    self.emit('signal', {\n      candidate: {\n        candidate: event.candidate.candidate,\n        sdpMLineIndex: event.candidate.sdpMLineIndex,\n        sdpMid: event.candidate.sdpMid\n      }\n    })\n  } else if (!event.candidate) {\n    self._iceComplete = true\n    self.emit('_iceComplete')\n  }\n}\n\nPeer.prototype._onChannelMessage = function (event) {\n  var self = this\n  if (self.destroyed) return\n  var data = event.data\n  self._debug('read: %d bytes', data.byteLength || data.length)\n\n  if (data instanceof ArrayBuffer) {\n    data = toBuffer(new Uint8Array(data))\n    self.push(data)\n  } else {\n    try {\n      data = JSON.parse(data)\n    } catch (err) {}\n    self.emit('data', data)\n  }\n}\n\nPeer.prototype._onChannelOpen = function () {\n  var self = this\n  if (self.connected || self.destroyed) return\n  self._debug('on channel open')\n  self._channelReady = true\n  self._maybeReady()\n}\n\nPeer.prototype._onChannelClose = function () {\n  var self = this\n  if (self.destroyed) return\n  self._debug('on channel close')\n  self._destroy()\n}\n\nPeer.prototype._onAddStream = function (event) {\n  var self = this\n  if (self.destroyed) return\n  self._debug('on add stream')\n  self.emit('stream', event.stream)\n}\n\nPeer.prototype._onError = function (err) {\n  var self = this\n  if (self.destroyed) return\n  self._debug('error %s', err.message || err)\n  self._destroy(err)\n}\n\nPeer.prototype._debug = function () {\n  var self = this\n  var args = [].slice.call(arguments)\n  var id = self.channelName && self.channelName.substring(0, 7)\n  args[0] = '[' + id + '] ' + args[0]\n  debug.apply(null, args)\n}\n\nfunction noop () {}\n","/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function (arr) {\n  // If `Buffer` is the browser `buffer` module, and the browser supports typed arrays,\n  // then avoid a copy. Otherwise, create a `Buffer` with a copy.\n  var constructor = Buffer.TYPED_ARRAY_SUPPORT\n    ? Buffer._augment\n    : function (arr) { return new Buffer(arr) }\n\n  if (arr instanceof Uint8Array) {\n    return constructor(arr)\n  } else if (arr instanceof ArrayBuffer) {\n    return constructor(new Uint8Array(arr))\n  } else if (isTypedArray(arr)) {\n    // Use the typed array's underlying ArrayBuffer to back new Buffer. This respects\n    // the \"view\" on the ArrayBuffer, i.e. byteOffset and byteLength. No copy.\n    return constructor(new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength))\n  } else {\n    // Unsupported type, just pass it through to the `Buffer` constructor.\n    return new Buffer(arr)\n  }\n}\n","\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","/* global Y */\r\n'use strict'\r\n\r\nvar SimplePeer = require('simple-peer')\r\nvar uuid = require('uuid');\r\n\r\nfunction extend (Y) {\r\n  class SimplePeerConnector extends Y.AbstractConnector {\r\n    constructor(y, options) {\r\n      if (options === undefined) {\r\n        throw new Error('Options must be defined.');\r\n      }\r\n      if (options.simplepeer == null) {\r\n        throw new Error('SimplePeer object must be defined.')\r\n      }\r\n      super(y, options);\r\n      this.simplepeer = options.simplepeer;\r\n      var self = this;\r\n\r\n      self.simplepeer.on('connect', function () {\r\n        console.log('SIMPLEPEER CONNECTED');\r\n\r\n        self.setUserId(uuid.v4());\r\n      });\r\n\r\n      self.simplepeer.on('data', function (data) {\r\n        if (data.action === 'data') {\r\n          self.receiveMessage(data.peerID, data.payload);\r\n        } else if (data.action === 'join') {\r\n          self.userJoined(data.peerID, 'master')\r\n        }\r\n        //TODO: peer left, probably on some kind of simple-peer disconnect event\r\n      });\r\n\r\n    }\r\n\r\n    disconnect() {\r\n      this.simplepeer.destroy();\r\n      super.disconnect();\r\n    }\r\n\r\n    reconnect() {\r\n      throw new Error('Reconnect is not implemented.');\r\n      super.reconnect();\r\n    }\r\n\r\n    send(uid, message) {\r\n      var self = this;\r\n      // we have to make sure that the message is sent under all circumstances\r\n      var send = function () {\r\n        // check if the clients still exists\r\n        //var peer = self.swr.webrtc.getPeers(uid)[0];\r\n        var success;\r\n        //if (peer) {\r\n        // success is true, if the message is successfully sent\r\n        var data = {};\r\n        data.action = 'data';\r\n        data.peerID = self.userId;\r\n        data.payload = message;\r\n        success = self.simplepeer.send(JSON.stringify(data));\r\n        //}\r\n        if (!success) {\r\n          // resend the message if it didn't work\r\n          setTimeout(send, 500);\r\n        }\r\n      }\r\n      // try to send the message\r\n      send();\r\n    }\r\n\r\n    broadcast (message) {\r\n      var data = {};\r\n      data.action = 'data';\r\n      data.peerID = self.userId;\r\n      data.payload = message;\r\n      self.simplepeer.send(JSON.stringify(data));\r\n      //throw new Error('Broadcast is not implemented.');\r\n    }\r\n\r\n    isDisconnected () {\r\n      return false;\r\n    }\r\n  }\r\n  Y.extend('simplepeer', SimplePeerConnector);\r\n}\r\n\r\nmodule.exports = extend\r\nif (typeof Y !== 'undefined') {\r\n  extend(Y)\r\n}\r\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn) {\n  var args = new Array(arguments.length - 1);\n  var i = 0;\n  while (i < args.length) {\n    args[i++] = arguments[i];\n  }\n  process.nextTick(function afterTick() {\n    fn.apply(null, args);\n  });\n}\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events');\n\n/*<replacement>*/\nvar EElistenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function')\n    this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function() {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (ret !== null)\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      processNextTick(emitReadable_, stream);\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    processNextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      if (state.pipesCount === 1 &&\n          state.pipes[0] === dest &&\n          src.listenerCount('data') === 1 &&\n          !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }; }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else if (list.length === 1)\n      ret = list[0];\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  this.once('prefinish', function() {\n    if (typeof this._flush === 'function')\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function (){try {\nObject.defineProperty(WritableState.prototype, 'buffer', {\n  get: internalUtil.deprecate(function() {\n    return this.getBuffer();\n  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +\n     'instead.')\n});\n}catch(_){}}());\n\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = nop;\n\n  if (state.ended)\n    writeAfterEnd(this, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.bufferedRequest)\n      clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',\n'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']\n.indexOf((encoding + '').toLowerCase()) > -1))\n    throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync)\n    processNextTick(cb, er);\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      processNextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var buffer = [];\n    var cbs = [];\n    while (entry) {\n      cbs.push(entry.callback);\n      buffer.push(entry);\n      entry = entry.next;\n    }\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    doWrite(stream, state, true, state.length, buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null)\n      state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined)\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.length === 0 &&\n          state.bufferedRequest === null &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      processNextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"],"sourceRoot":"/source/"}